version: "3.8"

services:

  flask:
    build: ./project
    container_name: flask_app
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: database
      POSTGRES_DB: db
    links:
      - db:database
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    profiles: [prod]

  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U user -d db'" ]
      interval: 6s
      timeout: 3s
      retries: 3
    profiles: [prod]

  api-test:
    build:
      context: ./project
      dockerfile: Dockerfile.pytest
    depends_on:
      db-test:
        condition: service_healthy
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db-test
      POSTGRES_DB: test_db
    links:
      - db-test:db-test
    profiles: [test]

  db-test:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_db
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U user -d test_db'" ]
      interval: 6s
      timeout: 3s
      retries: 3
    profiles: [test, test-db]
